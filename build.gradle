
plugins {
    id 'java-library'
}
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'

version = '2.0.0'

repositories {
    jcenter()
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java','src/examples/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

jar {
    manifest {
        attributes('Implementation-Title': 'Java Nats',
                   'Implementation-Version': '2.0.0',
                   'Implementation-Vendor': 'nats.io')
    }
    exclude("io/nats/examples/**")
}

javadoc {
    options.overview = 'src/main/javadoc/overview.html' // relative to source root
    source = sourceSets.main.allJava
    title = "NATS.IO Java API"
    excludes = ['io/nats/client/impl', 'io/nats/examples']
    classpath = sourceSets.main.runtimeClasspath
    doLast {
            exec {
                println "Updating favicon on all html files"
                workingDir 'build/docs/javadoc'
                // Only on linux, mac at this point
                commandLine 'find', '.', '-name', '*.html', '-exec', 'sed', '-i', '-e', 's#<head>#<head><link rel="icon" type="image/ico" href="favicon.ico">#', '{}', ';'
            }
            copy {
                println "Copying images to javadoc folder"
                from 'src/main/javadoc/images'
                into 'build/docs/javadoc'
            }
        }
}

task examplesJar(type: Jar) {
    baseName 'java-nats-examples'
    manifest {
        attributes('Implementation-Title': 'Java Nats Examples',
                   'Implementation-Version': '2.0.0',
                   'Implementation-Vendor': 'nats.io')
    }
    from(sourceSets.main.output) {
        include "io/nats/examples/**"
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task generatePom{
    doLast {
        pom {
            project {
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://$buildDir/repos")
        }
    }
}

